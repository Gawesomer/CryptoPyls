import random
import time
from typing import Tuple

from set3.challenge21.mersenne_rng import MT19937


def mt19937_oracle() -> Tuple[int, int]:
    """
    Waits a random number of seconds between
    Seeds the RNG with the current Unix timestamp
    Waits a random number of seconds again.
    Returns the first 32 bit output of the RNG and current time used as seed
    """
    time.sleep(random.randint(40, 1000))

    curr_time = int(time.time())
    mt = MT19937()
    mt.seed_mt(curr_time)

    time.sleep(random.randint(40, 1000))
    return mt.extract_number(), curr_time


def break_currtime_mt19937(rand_num: int, eps: int = 1200) -> int:
    """
    params:
        rand_num: first number generated by MT19937 using current UNIX time
                  as seed
        eps: number of seconds in the past to look back through
    returns:
        seed used by MT19937 to generate `rand_num`
        None if seed not found
    """
    curr_time = int(time.time())
    for t in range(curr_time-eps, curr_time+1):
        mt = MT19937()
        mt.seed_mt(t)
        if mt.extract_number() == rand_num:
            return t
    return None


def main():
    rand_num, seed = mt19937_oracle()
    cracked_seed = break_currtime_mt19937(rand_num)

    assert seed == cracked_seed
    print("SUCCESS")


if __name__ == "__main__":
    main()
